{"ast":null,"code":"var _jsxFileName = \"/home/ben/code/Courses/React Front To Back - Udemy Coursework/02.0-Contact-Keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      _id: '1',\n      name: 'Ted Johnnyson',\n      email: 'TJ@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      _id: '2',\n      name: 'Sarah Smith',\n      email: 'ssmith@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      _id: '3',\n      name: 'Harry WHite',\n      email: 'hwhite@gmail.com',\n      phone: '333-333-3333',\n      type: 'professional'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuidv4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n  // Clear Current Contact\n  // Update Contact\n  // Filter Contacts\n  // Clear Filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/home/ben/code/Courses/React Front To Back - Udemy Coursework/02.0-Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuidv4","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","_id","name","email","phone","type","current","state","dispatch","addContact","contact","id","payload","deleteContact","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,KAAK,EAAE,cAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,KAAK,EAAE,kBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,KAAK,EAAE,kBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KAfQ,CADS;AAwBnBC,IAAAA,OAAO,EAAE;AAxBU,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACI,cAAD,EAAiBU,YAAjB,CAApC,CA5B8B,CA8B9B;;AACA,QAAMU,UAAU,GAAIC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACC,EAAR,GAAaxB,MAAM,EAAnB;AACAqB,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEf,WAAR;AAAqBsB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACD,GAHD,CA/B8B,CAoC9B;;;AACA,QAAMG,aAAa,GAAIF,EAAD,IAAQ;AAC5BH,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEd,cAAR;AAAwBqB,MAAAA,OAAO,EAAED;AAAjC,KAAD,CAAR;AACD,GAFD,CArC8B,CAyC9B;AAEA;AAEA;AAEA;AAEA;;;AAEA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADX;AAELS,MAAAA,UAFK;AAGLI,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGf,KAAK,CAACgB,QAPT,CADF;AAWD,CA9DD;;AAgEA,eAAejB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        _id: '1',\n        name: 'Ted Johnnyson',\n        email: 'TJ@gmail.com',\n        phone: '222-222-2222',\n        type: 'personal',\n      },\n      {\n        _id: '2',\n        name: 'Sarah Smith',\n        email: 'ssmith@gmail.com',\n        phone: '111-111-1111',\n        type: 'personal',\n      },\n      {\n        _id: '3',\n        name: 'Harry WHite',\n        email: 'hwhite@gmail.com',\n        phone: '333-333-3333',\n        type: 'professional',\n      },\n    ],\n    current: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Add Contact\n  const addContact = (contact) => {\n    contact.id = uuidv4();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  // Delete Contact\n  const deleteContact = (id) => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Set Current Contact\n\n  // Clear Current Contact\n\n  // Update Contact\n\n  // Filter Contacts\n\n  // Clear Filter\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        addContact,\n        deleteContact,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}